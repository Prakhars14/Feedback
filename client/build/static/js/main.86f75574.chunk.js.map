{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/surveys/SurveyList.js","components/Dashboard.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/formFields.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","App.js","reducers/index.js","reducers/authReducer.js","reducers/surveyReducers.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","console","log","submitSurvey","values","history","push","fetchSurveys","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","to","this","auth","href","key","style","margin","credits","Landing","textAlign","SurveyList","surveys","reverse","map","survey","title","subject","body","Date","dateSent","toLocaleDateString","yes","no","renderSurveys","Dashboard","SurveyField","input","label","meta","error","touched","marginBottom","re","SurveyForm","_","formFields","Field","component","marginTop","display","justifyContent","width","onSubmit","handleSubmit","onSurveySubmit","renderFields","reduxForm","validate","errors","emails","invalidEmails","split","email","trim","filter","test","length","validateEmails","recipients","form","destroyOnUnmount","state","formValues","surveyForm","withRouter","onCancel","useHistory","onClick","SurveyNew","showReview","setState","renderContent","App","path","exact","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86f75574.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {FETCH_USER, FETCH_SURVEYS} from './types';\r\n\r\nexport const fetchUser= () => async dispatch=> {\r\n        const res= await axios.get('/api/testing')\r\n        dispatch({type:FETCH_USER, payload: res.data});\r\n    };\r\n\r\nexport const handleToken=(token)=>async dispatch => {\r\n    const res= await axios.post('/api/stripe',token);\r\n    console.log(res.data);\r\n    dispatch({type:FETCH_USER, payload: res.data});\r\n}\r\n\r\nexport const submitSurvey=(values, history)=>async dispatch=>{\r\n    const res=await axios.post('/api/surveys', values);\r\n    history.push('/surveys');\r\n    dispatch({type:FETCH_USER, payload: res.data});\r\n}\r\n\r\nexport const fetchSurveys=()=>async dispatch=>{\r\n    const res=await axios.get('/api/surveys');\r\n    \r\n    dispatch({type:FETCH_SURVEYS, payload:res.data});\r\n};","export const FETCH_USER='fetch_user';\r\nexport const FETCH_SURVEYS='fetch_surveys';","import React, { Component } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions\";\r\n\r\nclass Payments extends Component {\r\n  render() {\r\n    //debugger;\r\n    //amount is in cents and is defaulted at dollars\r\n    return (\r\n      <StripeCheckout\r\n        name=\"Deedback Pack\"\r\n        description=\"$5 for 5 email credits\"\r\n        amount={500}\r\n        token={(token) => this.props.handleToken(token)}\r\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n      >\r\n        <button className=\"white btn blue-text\">Add Credits</button>\r\n      </StripeCheckout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(Payments);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Payments from \"./Payments\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"blue\">\r\n        <div className=\"nav-wrapper\">\r\n          <Link\r\n            to={this.props.auth ? \"/surveys\" : \"/\"}\r\n            className=\"left brand-logo\"\r\n          >\r\n            &nbsp;Emaily\r\n          </Link>\r\n          <ul className=\"right\">\r\n            {(() => {\r\n              switch (this.props.auth) {\r\n                case null:\r\n                  return;\r\n                case false:\r\n                  return (\r\n                    <li>\r\n                      <a href=\"/auth/google\">Login with Google</a>\r\n                    </li>\r\n                  );\r\n                default:\r\n                  return [\r\n                    <li key={1}>\r\n                      <Payments />\r\n                    </li>,\r\n                    <li key={2} style={{ margin: \"0 10px\" }}>\r\n                      Credits: {this.props.auth.credits}\r\n                    </li>,\r\n                    <li key={3}>\r\n                      <a href=\"/api/logout\">Logout</a>\r\n                    </li>,\r\n                  ];\r\n              }\r\n            })()}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>Emaily! </h1>\r\n      <p>We Collect Feedbacks</p>\r\n      <Link to=\"/surveys\" className=\"\">\r\n        Get started\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSurveys } from \"../../actions\";\r\n\r\nclass SurveyList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSurveys();\r\n  }\r\n\r\n  renderSurveys() {\r\n    return this.props.surveys.reverse().map((survey) => {\r\n      return (\r\n        <div className=\"card darken-3\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title blue-text\">{survey.title}</span>\r\n            <p>Subject: {survey.subject}</p>\r\n            <p>Question: {survey.body}</p>\r\n            <p className=\"right\">\r\n              Sent on: {new Date(survey.dateSent).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <a href=\"#\" className=\"green-text\">\r\n              Yes: {survey.yes}\r\n            </a>\r\n            <a href=\"#\" className=\"red-text\">\r\n              No: {survey.no}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"container\">{this.renderSurveys()}</div>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ surveys }) {\r\n  return { surveys };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSurveys })(SurveyList);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SurveyList from \"./surveys/SurveyList\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <SurveyList />\r\n      <div className=\"fixed-action-btn\">\r\n        <Link to=\"/surveys/new\" className=\"btn-floating btn-large blue\">\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\n\r\nconst SurveyField = ({input,label,meta:{error, touched}}) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...input} style={{marginBottom:'5px'}}/>\r\n            <div className=\"red-text\" style={{marginBottom:'20px'}}>\r\n                {touched&&error}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyField\r\n","const re=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default (emails)=>{\r\n    const invalidEmails=emails.split(',')\r\n    .map(email=>email.trim())\r\n    .filter(email=>!re.test(email))\r\n\r\n    if(invalidEmails.length){\r\n        return `These emails are invalid: ${invalidEmails}`;\r\n    }\r\n    return; \r\n};","export default [\r\n  { label: \"Survey Title\", name: \"title\" },\r\n  { label: \"Survey Subject\", name: \"subject\" },\r\n  { label: \"Survey Question/Body\", name: \"body\" },\r\n  { label: \"Recipient List (Email IDs)\", name: \"recipients\" },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport SurveyField from \"./SurveyField\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validateEmails from \"../../utils/validateEmails\";\r\nimport formFields from \"./formFields\";\r\n\r\nclass SurveyForm extends Component {\r\n  renderFields() {\r\n    return _.map(formFields, ({ label, name }) => {\r\n      return (\r\n        <Field component={SurveyField} type=\"text\" label={label} name={name} />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ marginTop: \"7%\", display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <form\r\n          style={{ width: \"80%\" }}\r\n          onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}\r\n        >\r\n          {this.renderFields()}\r\n          <Link to=\"/surveys\" className=\"red btn-flat white-text\">\r\n            Cancel\r\n          </Link>\r\n          <button className=\"green btn-flat right white-text\" type=\"submit\">\r\n            Next <i className=\"material-icons right\">done</i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validate(values) {\r\n  const errors = {};\r\n\r\n  errors.emails = validateEmails(values.emails || \"\");\r\n\r\n  if (!values.title) {\r\n    errors.title = \"You must provide a title\";\r\n  }\r\n  if (!values.subject) {\r\n    errors.subject = \"You must provide a subject\";\r\n  }\r\n  if (!values.body) {\r\n    errors.body = \"You must provide a body\";\r\n  }\r\n  if (!values.recipients) {\r\n    errors.recipients = \"You must provide the emails\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  validate,\r\n  form: \"surveyForm\",\r\n  destroyOnUnmount: false,\r\n})(SurveyForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport formFields from \"./formFields\";\r\nimport * as actions from \"../../actions\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\n\r\nconst SurveyFormReview = ({ onCancel, formValues, submitSurvey }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div style={{ margin: \"12%\" }}>\r\n      <h5>Please confirm your entries</h5>\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <div>\r\n          <label>Survey Title</label>\r\n          <div>{formValues.title}</div>\r\n        </div>\r\n        <div>\r\n          <label>Subject Subject</label>\r\n          <div>{formValues.subject}</div>\r\n        </div>\r\n        <div>\r\n          <label>Survey Question/Body</label>\r\n          <div>{formValues.body}</div>\r\n        </div>\r\n        <div>\r\n          <label>Recipient List (Email IDs)</label>\r\n          <div>{formValues.recipients}</div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: \"20px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <button\r\n          className=\"yellow white-text darken-3 btn-flat\"\r\n          onClick={onCancel}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          className=\"green white-text btn-flat\"\r\n          onClick={() => submitSurvey(formValues, history)}\r\n        >\r\n          Send Survey\r\n          <i className=\"material-icons right\">email</i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    formValues: state.form.surveyForm.values,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));\r\n","import React, { Component } from \"react\";\r\nimport SurveyForm from \"./SurveyForm\";\r\nimport SurveyFormReview from \"./SurveyFormReview\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nclass SurveyNew extends Component {\r\n  state = {\r\n    showReview: false,\r\n  };\r\n  renderContent() {\r\n    if (this.state.showReview) {\r\n      return (\r\n        <SurveyFormReview\r\n          onCancel={() => this.setState({ showReview: false })}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <SurveyForm onSurveySubmit={() => this.setState({ showReview: true })} />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"container \">{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"surveyForm\",\r\n})(SurveyNew);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions\";\nimport Landing from \"./components/Landing\";\nimport Dashboard from \"./components/Dashboard\";\nimport SurveyNew from \"./components/surveys/SurveyNew\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={Landing} />\n          <Route path=\"/surveys\" exact component={Dashboard} />\n          <Route path=\"/surveys/new\" exact component={SurveyNew} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport {reducer as reduxForm} from 'redux-form';\r\nimport surveyReducers from './surveyReducers';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: reduxForm,\r\n    surveys: surveyReducers\r\n})","import {FETCH_USER} from '../actions/types';\r\n\r\nexport default function(state=null, action) {\r\n    switch(action.type){\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_SURVEYS} from '../actions/types';\r\n\r\nexport default function(state=[], action) {\r\n    switch(action.type) {\r\n        case FETCH_SURVEYS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducers from './reducers';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport reduxThunk from 'redux-thunk';\n\nconst store=createStore(reducers,{},applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}